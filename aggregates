Queries with aggregates (Pt. 1)
https://sqlbolt.com/lesson/select_queries_with_aggregates


--- Select query with aggregate functions over all rows
SELECT AGG_FUNC(column_or_expression) AS aggregate_description, …
FROM mytable
WHERE constraint_expression;



--- Select query with aggregate functions over groups
SELECT AGG_FUNC(column_or_expression) AS aggregate_description, …
FROM mytable
WHERE constraint_expression
GROUP BY column;


--- Select query with HAVING constraint
SELECT group_by_column, AGG_FUNC(column_expression) AS aggregate_result_alias, …
FROM mytable
WHERE condition
GROUP BY column
HAVING group_condition;



--- Did you know?
If you aren't using the `GROUP BY` clause, a simple `WHERE` clause will suffice.






--- Find the longest time that an employee has been at the studio

SELECT name, MAX(years_employed)
FROM employees
---------------MAX, MIN, COUNT, SUM, AVG와 같은 함수안에 얻고 싶은 컬럼을 넣는다. 



--- For each role, find the average number of years employed by employees in that role


SELECT role, avg(years_employed) as avg
FROM employees
group by role
---------------role로 그룹화해서 보여준다.


--- Find the number of Artists in the studio (without a HAVING clause)

SELECT count(role)
FROM employees
where role = 'Artist'
group by Building


--- Find the number of Employees of each role in the studio

SELECT role, count(role)
FROM employees
group by role

--- Find the total number of years employed by all Engineers

SELECT role, sum(Years_employed)
FROM employees
where role = 'Engineer'

SELECT role, SUM(years_employed)
FROM employees
GROUP BY role
HAVING role = "Engineer";


